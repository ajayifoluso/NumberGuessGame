/* ===================================
   ANIMATIONS.CSS - Number Guessing Game V2
   ================================== */

/* CORRECT GUESS ANIMATIONS */
@keyframes correctGuess {
    0% { 
        transform: scale(1); 
        background-color: #28a745;
        box-shadow: 0 0 0 0 rgba(40, 167, 69, 0.7);
    }
    25% { 
        transform: scale(1.05); 
        background-color: #20c997;
        box-shadow: 0 0 0 10px rgba(40, 167, 69, 0.4);
    }
    50% { 
        transform: scale(1.1); 
        background-color: #17a2b8;
        box-shadow: 0 0 0 20px rgba(40, 167, 69, 0.2);
    }
    75% { 
        transform: scale(1.05); 
        background-color: #20c997;
        box-shadow: 0 0 0 10px rgba(40, 167, 69, 0.1);
    }
    100% { 
        transform: scale(1); 
        background-color: #28a745;
        box-shadow: 0 0 0 0 rgba(40, 167, 69, 0);
    }
}

@keyframes celebrationBounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-20px); }
    60% { transform: translateY(-15px); }
}

@keyframes correctPulse {
    0% { 
        transform: scale(1);
        opacity: 1;
    }
    50% { 
        transform: scale(1.2);
        opacity: 0.8;
        filter: brightness(1.3);
    }
    100% { 
        transform: scale(1);
        opacity: 1;
    }
}

/* WRONG GUESS ANIMATIONS */
@keyframes wrongGuess {
    0% { transform: translateX(0); background-color: #6c757d; }
    10% { transform: translateX(-8px); background-color: #dc3545; }
    20% { transform: translateX(8px); background-color: #fd7e83; }
    30% { transform: translateX(-6px); background-color: #dc3545; }
    40% { transform: translateX(6px); background-color: #fd7e83; }
    50% { transform: translateX(-4px); background-color: #dc3545; }
    60% { transform: translateX(4px); background-color: #fd7e83; }
    70% { transform: translateX(-2px); background-color: #dc3545; }
    80% { transform: translateX(2px); background-color: #fd7e83; }
    90% { transform: translateX(-1px); background-color: #dc3545; }
    100% { transform: translateX(0); background-color: #6c757d; }
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-3px); }
    20%, 40%, 60%, 80% { transform: translateX(3px); }
}

@keyframes errorFlash {
    0%, 100% { background-color: transparent; }
    25% { background-color: rgba(220, 53, 69, 0.3); }
    50% { background-color: rgba(220, 53, 69, 0.6); }
    75% { background-color: rgba(220, 53, 69, 0.3); }
}

/* ENTRY ANIMATIONS */
@keyframes fadeIn {
    from { 
        opacity: 0; 
        transform: translateY(-30px); 
    }
    to { 
        opacity: 1; 
        transform: translateY(0); 
    }
}

@keyframes slideInLeft {
    from { 
        opacity: 0; 
        transform: translateX(-50px); 
    }
    to { 
        opacity: 1; 
        transform: translateX(0); 
    }
}

@keyframes slideInRight {
    from { 
        opacity: 0; 
        transform: translateX(50px); 
    }
    to { 
        opacity: 1; 
        transform: translateX(0); 
    }
}

@keyframes zoomIn {
    from { 
        opacity: 0; 
        transform: scale(0.3); 
    }
    to { 
        opacity: 1; 
        transform: scale(1); 
    }
}

/* HINT ANIMATIONS */
@keyframes hintGlow {
    0% { 
        box-shadow: 0 0 5px rgba(255, 193, 7, 0.5);
        transform: scale(1);
    }
    50% { 
        box-shadow: 0 0 20px rgba(255, 193, 7, 0.8);
        transform: scale(1.02);
    }
    100% { 
        box-shadow: 0 0 5px rgba(255, 193, 7, 0.5);
        transform: scale(1);
    }
}

@keyframes hintPop {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* BUTTON ANIMATIONS */
@keyframes buttonPress {
    0% { transform: scale(1); }
    50% { transform: scale(0.95); }
    100% { transform: scale(1); }
}

@keyframes buttonHover {
    0% { 
        transform: translateY(0px);
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }
    100% { 
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.3);
    }
}

/* PROGRESS/LOADING ANIMATIONS */
@keyframes progressFill {
    from { width: 0%; }
    to { width: var(--progress-width, 100%); }
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.6; }
}

/* CONFETTI/CELEBRATION ANIMATIONS */
@keyframes confetti {
    0% { 
        transform: translateY(-100vh) rotate(0deg);
        opacity: 1;
    }
    100% { 
        transform: translateY(100vh) rotate(720deg);
        opacity: 0;
    }
}

@keyframes fireworks {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    50% {
        transform: scale(1);
        opacity: 0.8;
    }
    100% {
        transform: scale(1.5);
        opacity: 0;
    }
}

/* GAME STATE ANIMATIONS */
@keyframes gameWin {
    0% { 
        transform: scale(1) rotate(0deg);
        background: linear-gradient(45deg, #FFD700, #FFA500);
    }
    25% { 
        transform: scale(1.1) rotate(5deg);
        background: linear-gradient(45deg, #FF6B6B, #4ECDC4);
    }
    50% { 
        transform: scale(1.2) rotate(-5deg);
        background: linear-gradient(45deg, #45B7D1, #96CEB4);
    }
    75% { 
        transform: scale(1.1) rotate(3deg);
        background: linear-gradient(45deg, #FECA57, #FF9FF3);
    }
    100% { 
        transform: scale(1) rotate(0deg);
        background: linear-gradient(45deg, #FFD700, #FFA500);
    }
}

@keyframes gameLose {
    0%, 100% { 
        filter: grayscale(0%);
        transform: scale(1);
    }
    50% { 
        filter: grayscale(100%);
        transform: scale(0.98);
    }
}

/* UTILITY ANIMATION CLASSES */
.animate-correct {
    animation: correctGuess 0.8s ease-in-out, celebrationBounce 1.2s ease-in-out;
}

.animate-wrong {
    animation: wrongGuess 0.6s ease-in-out, shake 0.5s ease-in-out 0.6s;
}

.animate-fade-in {
    animation: fadeIn 0.6s ease-out;
}

.animate-slide-left {
    animation: slideInLeft 0.5s ease-out;
}

.animate-slide-right {
    animation: slideInRight 0.5s ease-out;
}

.animate-zoom-in {
    animation: zoomIn 0.4s ease-out;
}

.animate-hint {
    animation: hintGlow 1.5s ease-in-out infinite;
}

.animate-button-press {
    animation: buttonPress 0.2s ease-in-out;
}

.animate-win {
    animation: gameWin 2s ease-in-out infinite;
}

.animate-lose {
    animation: gameLose 1s ease-in-out;
}

.animate-pulse {
    animation: pulse 1.5s ease-in-out infinite;
}

.animate-spin {
    animation: spin 1s linear infinite;
}

/* HOVER EFFECTS */
.btn-animated:hover {
    animation: buttonHover 0.3s ease-out forwards;
}

.card-hover:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.2);
    transition: all 0.3s ease;
}

/* RESPONSIVE ANIMATION CONTROLS */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}

/* ANIMATION TIMING UTILITIES */
.animate-fast {
    animation-duration: 0.3s !important;
}

.animate-slow {
    animation-duration: 2s !important;
}

.animate-delay-1 {
    animation-delay: 0.2s;
}

.animate-delay-2 {
    animation-delay: 0.4s;
}

.animate-delay-3 {
    animation-delay: 0.6s;
}
